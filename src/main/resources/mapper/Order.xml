<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ai.yunxi.sharding.mapper.OrderMapper">

    <insert id="save" useGeneratedKeys="true" keyProperty="id"
            parameterType="ai.yunxi.sharding.model.Order">
        INSERT INTO t_order(id,user_id, order_id) VALUES(#{id},#{userId}, #{orderId})
    </insert>
    <select id="findDetail" resultType="ai.yunxi.sharding.model.OrderItem">
        select order_id as orderId,brand_name as brandName,product_name as productName,
        order_date as orderDate,pay_date as payDate,total_price as totalPrice,
        discount as payDiscount,pay_price as payPrice
        from  t_order_item
        where order_id in
        <foreach collection="orderIds" close=")" open="(" item="id" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="findDetailAll" resultType="ai.yunxi.sharding.model.OrderItem">
        select order_id as orderId,brand_name as brandName,product_name as productName,
        order_date as orderDate,pay_date as payDate,total_price as totalPrice,
        discount as payDiscount,pay_price as payPrice
        from  t_order_item
    </select>

    <select id="findDetailByOrderIdAndUserId" resultType="ai.yunxi.sharding.model.OrderItem">
        select i.order_id as orderId,i.brand_name as brandName,i.product_name as productName,
        i.order_date as orderDate,i.pay_date as payDate,i.total_price as totalPrice,
        i.discount as payDiscount,i.pay_price as payPrice
        from  t_order_item i left join t_order o on i.order_id=o.order_id and i.user_id=o.user_id
        where i.order_id in
        <foreach collection="orderIds" close=")" open="(" item="id" separator=",">
            #{id}
        </foreach>
    </select>

</mapper>