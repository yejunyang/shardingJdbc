# 数据源配置
#sharding.jdbc.datasource.names=slave0,slave1,slave2,slave3
spring.shardingsphere.datasource.names=slave2

#sharding.jdbc.datasource.slave0.type=com.alibaba.druid.pool.DruidDataSource
#sharding.jdbc.datasource.slave0.driver-class-name=com.mysql.jdbc.Driver
#sharding.jdbc.datasource.slave0.url=jdbc:mysql://192.168.56.113:3306/ds1?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8
#sharding.jdbc.datasource.slave0.username=yejy
#sharding.jdbc.datasource.slave0.password=Yejy_123

spring.shardingsphere.datasource.slave2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.slave2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.slave2.url=jdbc:mysql://192.168.56.113:3306/ds0?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8
spring.shardingsphere.datasource.slave2.username=yejy
spring.shardingsphere.datasource.slave2.password=Yejy_123

#sharding.jdbc.datasource.slave1.type=com.alibaba.druid.pool.DruidDataSource
#sharding.jdbc.datasource.slave1.driver-class-name=com.mysql.jdbc.Driver
#sharding.jdbc.datasource.slave1.url=jdbc:mysql://192.168.56.114:3306/ds1?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8
#sharding.jdbc.datasource.slave1.username=yejy
#sharding.jdbc.datasource.slave1.password=Yejy_123
#
#sharding.jdbc.datasource.slave3.type=com.alibaba.druid.pool.DruidDataSource
#sharding.jdbc.datasource.slave3.driver-class-name=com.mysql.jdbc.Driver
#sharding.jdbc.datasource.slave3.url=jdbc:mysql://192.168.56.114:3306/ds0?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8
#sharding.jdbc.datasource.slave3.username=yejy
#sharding.jdbc.datasource.slave3.password=Yejy_123

# 分库配置
#sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=user_id
#sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=slave$->{user_id % 4}
#sharding.jdbc.config.sharding.binding-tables=t_order,t_order_item

# t_order分表配置
#sharding.jdbc.config.sharding.tables.t_order.actual-data-nodes=slave2.t_order$->{0..1}_$->{0..1}
#sharding.jdbc.config.sharding.tables.t_order.table-strategy.complex.sharding-columns=user_id,order_id
#sharding.jdbc.config.sharding.tables.t_order.table-strategy.complex.algorithm-class-name=ai.yunxi.sharding.config.ComplexShardingAlgorithm

# t_order_item分表配置
spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=slave2.t_order_item0_$->{0..1}
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item0_$->{order_id % 2}
spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE
#spring.shardingsphere.sharding.tables.t_order_item.key-generator.props.worker.id=123
#sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.complex.algorithm-class-name=ai.yunxi.sharding.config.ComplexShardingAlgorithm

# 广播表
#sharding.jdbc.config.sharding.broadcast-tables=t_province


spring.shardingsphere.props.sql.show=true